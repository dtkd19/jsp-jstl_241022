package controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import service.CommentService;
import service.CommentServiceImpl;

@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
	// 동기 통신이 아닌 비동기 통신 ( 데이터만 요청한 곳으로 보내는 방식 )
	// ReqeustDispatcher / destPage가 필요 없음.
	private CommentService csv; // interface로 생성
	
	
    public CommentController() {
    	csv = new CommentServiceImpl();
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 실제처리
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		//setContentType 은 설정할 필요 없음. = 동기에서 설정
		
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path > {}", path);
		
		/*
		 * switch (path) { case value:
		 * 
		 * break;
		 * 
		 * }
		 */
		
		
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 처리
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 처리
		service(request, response);
	}

}
