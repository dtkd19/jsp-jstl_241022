
console.log("board_detail.js in !!!");
console.log(bnoVal);

// 등록

// 등록 버튼을 누르면 작성자와 댓글 내용의 값을 객체로 생성 => 서버로 controller로 전송
document.getElementById('cmtAddBtn').addEventListener('click', () => {
	let cmtText = document.getElementById('cmtText').value;
	let cmtWriter = document.getElementById('cmtWriter').value;

	if (cmtText == null || cmtText == '') {
		alert("댓글을 입력해주세요.");
		return false;
	}
	// 댓글 객체 생성

	let cmtData = {
		bno: bnoVal,
		writer: cmtWriter,
		content: cmtText
	}
	// 댓글을 비동기로 전송	
	postCommentToserver(cmtData).then(result => {
		console.log(result); // isOK
		if (result == '1') {
			alert("댓글등록 성공");
		} else {
			alert("댓글등록 실패")
		}
	})
	// 댓글 출력
	printList(bnoVal)

});




function printList(bnoVal) {
	getCommentListFromServer(bnoVal).then(result => {
		console.log(result);
		if (result.length > 0) {
			printCommentList(result);
		} else {
			let div = document.getElementById('commentLine');
			div.innerHTML = `<div>comment가 없습니다.</div>`;
		}
	});
}





function printCommentList(result) {
	let div = document.getElementById('commentLine');
	div.innerText = ''; // 기존에 값이 있다면... 구조 지우기
	for (let i = 0; i < result.length; i++) {
		let html = `<div>`;
		html += `<div>${result[i].cno}, ${result[i].bno}, ${result[i].writer}, ${result[i].regdate}, ${result[i].readCount}</div>`;
		html += `<div>`;
		html += `<button type="button" data-cno="${result[i].cno}" class="cmtModBtn">수정</button>`;
		html += `<button type="button" data-cno="${result[i].cno}" class="cmtDelBtn">삭제</button><br>`;
		html += `<input type="text" class="cmtText" id="${result[i].cno}" value="${result[i].content}">`;
		html += `</div></div><hr>`;
		div.innerHTML += html;
	}
}




// 화면에서 데이터를 만들어서 보내는 방법 = post
// 데이터를 보낼때 method=post, headers(Content-Type), body 를 작성해서 전송
// 서버에서 데이터를 주는 방법 = get
// Content-Type : application/json; charset=utf-8

async function postCommentToserver(cmtData) {
	try {
		console.log(cmtData);
		const url = "/cmt/post";
		const config = {
			method: 'post',
			headers: {
				'Content-Type': 'application/json; charset=utf-8'
			},
			body: JSON.stringify(cmtData)
		}
		const resp = await fetch(url, config);
		const result = await resp.text(); // isOk 값을 text로 리턴 
		return result;
	} catch (error) {
		console.log(error);
	}
};

// list 가져오기 : 내 게시글에 달린 댓글만 가져오기 => get (생략가능)
async function getCommentListFromServer(bno) {
	try {
		const resp = await fetch("/cmt/list?bno=" + bno);
		const result = await resp.json(); // 댓글 리스트 [{...},{...}]
		return result;

	} catch (error) {
		console.log(error);
	}
};


async function updateCommentToServer(cmtData) {
	// 수정 : cno, content 객체를 보내서 isOk return => post
	try {
		console.log(cmtData);
		const url = "/cmt/modify";
		const config = {
			method: 'post',
			headers: {
				'Content-Type': 'application/json; charset=utf-8'
			},
			body: JSON.stringify(cmtData)
		}
		const resp = await fetch(url, config);
		const result = await resp.text();
		return result;

	} catch (error) {
		console.log(error);
	}
};

async function deleteCommentToServer(cno) {
	try {
		const resp = await fetch("/cmt/delete?cno=" + cno);
		const result = await resp.text();
		return result;

	} catch (error) {
		console.log(error);
	}
};


document.addEventListener('click', (e) => {
	console.log(e.target);
	console.log(e.target.dataset.cno);
	// 수정 
	if (e.target.classList.contains('cmtModBtn')) {
		// 수정에 대한 처리
		let cnoVal = e.target.dataset.cno;
		// cno 값을 id로 사용할 경우 
		let cmtText = document.getElementById(cnoVal).value;
		console.log(cmtText);

		// 내 타겟을 기준으로 가장 가까운 div를 찾기 closest('div');
		//let div = e.target.closest('div');
		//console.log(div); // 내 댓글 객체 찾기
		//let cmtText2 = div.querySelector('.cmtText').value;
		//console.log(cmtText2);


		let cmtData = {
			cno: cnoVal,
			content: cmtText
		}

		updateCommentToServer(cmtData).then(result => {
			console.log(result);
			if (result == '1') {
				alert("댓글 수정 성공!!");
			} else {
				alert("댓글 수정 실패..");
			}
		});

		// 수정 후 수정된 내용 출력
		printList(bnoVal);
	} else {
		// 삭제
		if (e.target.classList.contains('cmtDelBtn')) {
			// 삭제에 대한 처리
			let cnoVal = e.target.dataset.cno;
			console.log(cnoVal);
			// 삭제 비동기 함수 호출 result 받아서 alert 띄우기. 
			// 삭제 후 출력 메서드 호출

			deleteCommentToServer(cnoVal).then(result => {
				console.log(result);
				if (result == '1') {
					alert("댓글 삭제 성공!!");
				} else {
					alert("댓글 삭제 실패..");
				}
			})

			// 삭제 후 출력
			printList(bnoVal);

		}
	}

})











