package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;


@WebServlet("/mem/*")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private static final Logger log = LoggerFactory.getLogger(MemberController.class);
	//동기방식 : requestDispatcher : request에 대한 응답 데이터를 jsp(html) 화면으로 전송하는 역할
	private RequestDispatcher rdp;
	// 목적지 주소
	private String destPage;
	private int isOk;
	
	// service 
	private MemberService msv; 
	
	
	
    public MemberController() {
    	msv = new MemberServiceImpl();
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 처리
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=UTF-8");
		
		// 요청주소 추출
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path > {} " , path);
		
		switch (path) {
		case "join":
			destPage="/member/join.jsp";		
			break;
		case "register":
			
			try {
				// jsp에서 온 파라미터 받기
				// member 객체 생성 후 service에게 등록 요청
				String id = request.getParameter("id");
				String pwd = request.getParameter("pwd");
				String email = request.getParameter("email");
				String phone = request.getParameter("phone");
				
				MemberVO mvo = new MemberVO(id, pwd, email, phone);
				
				log.info(">>>> mvo inesert 객체 >>>> {}", mvo);
				
				int isOk = msv.register(mvo);
				
				log.info(">>>> mvo insert >>>>" + (isOk > 0 ? "성공" : "실패"));
				
				destPage = "join";
				
			} catch (Exception e) {
				log.info("join error");
				e.printStackTrace();
			}
			
			break;
		}
		
		// rdp 전송	
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
		
		
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 에서 처리
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 에서 처리
		service(request, response);
	}

}
